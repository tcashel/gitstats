name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            dependencies: >-
              libgtk-3-dev
              libxcb-render0-dev
              libxcb-shape0-dev
              libxcb-xfixes0-dev
              libxkbcommon-dev
              libssl-dev
          - os: macos-latest
            dependencies: ""
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.dependencies }}

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install gtk+3
          brew install openssl@3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        
      - name: Run tests
        run: cargo test --verbose
        
  fedora:
    name: Test (Fedora)
    runs-on: ubuntu-latest
    container: fedora:latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          dnf update -y
          dnf install -y \
            gcc \
            gtk3-devel \
            openssl-devel \
            libxcb-devel \
            libxkbcommon-devel \
            curl \
            pkg-config
            
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Run tests
        run: cargo test --verbose
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        
      - name: Check formatting
        run: cargo fmt --all -- --check
        
      - name: Run clippy
        run: cargo clippy -- -D warnings

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      - name: Build documentation
        run: cargo doc --no-deps
        
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc 