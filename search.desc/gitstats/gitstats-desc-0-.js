searchState.loadedDescShard("gitstats", 0, "Git Statistics Visualization Library\nCommon Types\nManages caching of analysis results\nClear the cache\nReturns the argument unchanged.\nRetrieve a result from the cache\nCalls <code>U::from(self)</code>.\nCreate a new cache manager\nStore a result in the cache\nAnalyze a Git repository asynchronously with specified …\nGet list of available branches in the repository\nAnomaly detector using BERT architecture\nRepresents a commit feature vector for ML analysis\nDetect anomalies in new commits\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrepares commit data for ML analysis\nTrain the anomaly detector\nMain application state\nThread-safe wrapper around App for use with eframe\nDraw the main application UI\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a cached result for the given branch and contributor\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpdate the app state with new analysis results\nChart style configuration\nChart theme configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate a plot asynchronously based on the current app …\nThe result of analyzing a Git repository.\nA key used for caching analysis results based on branch …\nProgress estimation for long-running operations\nList of available branches in the repository\nAverage number of lines changed per commit\nThe name of the Git branch\nChronological list of commit activity (date, lines added, …\nTotal number of commits analyzed\nCommit frequency by time period (e.g., by week)\nThe name of the contributor (or “All” for all …\nTime taken to analyze the repository (in seconds)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetailed processing statistics\nList of top contributors and their commit counts\nList of top contributors sorted by lines of code\nTotal number of lines added across all commits\nTotal number of lines deleted across all commits\nAggregate data points to reduce visual noise and improve …")